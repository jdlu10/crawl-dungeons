services:
  database:
    image: postgres:14
    volumes:
      # Named volume to persist database data outside of container.
      # Format is "named_volume:path/in/container"
      - db_pg_data:/var/lib/postgresql/data
      # Host mount for one-time initialization.
      # Format is "./path/on/host:/path/in/container"
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      # Map to something other than default 5432 on host in case Postgres
      # is also running natively on host.
      # Format is "host:container"
      - "5434:5432"
    environment:
      # Sets the superuser password for PostgreSQL
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  crawl-dungeons:
    build:
      context: .
      dockerfile: Dockerfile
    image: crawl-dungeons
    ports:
      # Map to something other than default 3000 on host in case Rails
      # is also running natively on host.
      # Format is "host:container"
      - "3000:3000"
    depends_on:
      - database
    # command: "ruby bin/rails tailwindcss:watch & ruby bin/rails server -b 0.0.0.0"
    command: "ruby bin/rails server -b 0.0.0.0"
    environment:
      # Database connection settings
      RAILS_ENV: ${RAILS_ENV}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_DB: ${DATABASE_DB}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      # Mount the current directory to the container for live code reloading
      - .:/rails

volumes:
  db_pg_data: {}
